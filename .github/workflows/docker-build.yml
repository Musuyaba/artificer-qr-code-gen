name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Set Date and Time Variables
        id: datetime
        run: echo "::set-output name=formatted_date::$(date +'%Y%m%d%H%M')"

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Before Run Copy .env
        run: cp .env.example .env

      - name: Extract Version from .env
        id: extract_version_env
        run: |
          export VERSION=$(grep 'APP_VERSION=' .env | cut -d'=' -f2)
          echo "::set-output name=version::$VERSION"

      - name: Set Git user information
        run: |
          git config user.email "musuyaba@gmail.com"
          git config user.name "Musuyaba Runner"

      - name: Determine the next version
        id: version
        run: |
          LAST_TAG=$(git describe --abbrev=0 --tags 2>/dev/null || echo "v1.0")
          MAJOR_VERSION="${{ steps.extract_version_env.outputs.version }}"
          MINOR_VERSION=$(awk -F'.' '{print $2}' <<< "$LAST_TAG")
          NEXT_VERSION="$MAJOR_VERSION.$((MINOR_VERSION + 1))"
          echo "::set-output name=next_version::$NEXT_VERSION"

      - name: Create Git tag
        if: success()
        run: git tag -a ${{ steps.version.outputs.next_version }} -m "Release ${{ steps.version.outputs.next_version }}"
  
      - name: Push Git tag
        if: success()
        run: git push origin ${{ steps.version.outputs.next_version }}
  
      - name: Generate Changelog
        if: success()
        run: |
          git log --pretty=format:"%s" $(git describe --tags --abbrev=0)..HEAD > changelog.txt
          echo "Changelog:"
          cat changelog.txt

      - name: Build and Push Docker Image
        run: |
          version=${{ steps.extract_version_env.outputs.next_version }}
          docker compose build --build-arg SERVICE_NAME=${version}-${{ steps.datetime.outputs.formatted_date }} common
          docker tag musuyaba/artificer-qr-code-gen:latest ${{ secrets.DOCKER_USERNAME }}/artificer-qr-code-gen:latest
          docker tag musuyaba/artificer-qr-code-gen:latest ${{ secrets.DOCKER_USERNAME }}/artificer-qr-code-gen:${version}-${{ steps.datetime.outputs.formatted_date }}
          docker push ${{ secrets.DOCKER_USERNAME }}/artificer-qr-code-gen:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/artificer-qr-code-gen:${version}-${{ steps.datetime.outputs.formatted_date }}
        env:
          DOCKER_BUILDKIT: 1
